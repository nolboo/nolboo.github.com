<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog | Nolboo's Blog]]></title>
  <link href="http://nolboo.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://nolboo.github.io/"/>
  <updated>2013-10-06T20:45:18+09:00</updated>
  <id>http://nolboo.github.io/</id>
  <author>
    <name><![CDATA[Nolboo Kim]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[옥토프레스로 블로깅하기]]></title>
    <link href="http://nolboo.github.io/blog/2013/07/21/start-octopress/"/>
    <updated>2013-07-21T23:16:00+09:00</updated>
    <id>http://nolboo.github.io/blog/2013/07/21/start-octopress</id>
    <content type="html"><![CDATA[<h2 id="section">이전 동기와 간단한 과정 소개</h2>

<p>워드프레스닷컴의 두 개의 블로그 중 학습을 위해 번역과 요약을 주로 올리던 <code>nolboos.wordpress.com</code> 블로그가 워드프레스닷컴에 의해 <a href="http://en.support.wordpress.com/suspended-blogs/">중지</a>되었다. 워드프레스 설치 호스팅 서비스를 세 곳이나 친절하게 알려주긴 했지만 도메인이나 비용, 속도 등 여러 사항이 걸리고, 아마존 이외에는 이용하던 호스팅 서비스도 없어 난감해 하고 있었다. 예전부터 Github Page로 블로그를 올리는 방법을 염두에 두고 있었는데 <a href="https://twitter.com/sungchi">@sungchi</a>님이 Github(http://sungchi.github.io/)와 <a href="http://tryghost.org/">Ghost</a>를 추천하셨다. 고스트는 아직 개발 중이어서 고려대상에서 제외하였고 깃허브는 블로그글을 쓸 때마다 메인페이지에 링크를 다는 불편함 등이 있었다. 게으른 놀부는 불편함을 없애주는 방법을 찾기 시작했고, 두 개가 눈에 들어왔다. </p>

<p><a href="http://haroopress.com/">하루프레스</a>와 <a href="http://octopress.org/">옥토프레스</a>
<!-- more -->
옥토프레스가 먼저 나왔고 해외에서 사용자 수가 점차적으로 늘어가고 있는 것 같으나 개발이 일년 이상 중지되어 있는 것 같았고, 하루프레스는 한국분이 <a href="https://twitter.com/Rhiokim">@Rhiokim</a> 만들어서인지 디자인이나 기능적인 측면에서 좀 더 끌리는 면이 있었다. 그래서 하루프레스를 설치하기 시작하였다. 그러나, 중간에 Xcode를 요구하는 에러메시지가 나와 물어보았더니 Xcode가 반드시 있어야 한다는 <a href="https://twitter.com/n0lb00/status/356388684259528705">답</a>이 돌아왔다. 디스크 용량을 걱정해야 하는 상황에선 Xcode 설치는 무리였다. 낙망하고 별 수 없이 옥토프레스를 설치하기 시작하였다.</p>

<h2 id="section-1">사전 경험 얻기</h2>

<p>검색을 해봐도 옥토프레스에 대한 한글 블로그 글이 거의 없었고,(해커들을 위한 블로그 시스템이라 설명을 안하나?ㅠㅠ) <a href="http://doomed-lover.com/archives/migrating-to-octopress/">옥토프레스 이전 과정</a>에서 몇 가지 사전 지식을 얻을 수 있었다.</p>

<ul>
  <li><a href="https://github.com/thomasf/exitwp">Exitwp</a> : 워드프레스 블로그를 지킬 블로그 엔진으로 쉽게 이전. 마크다운으로 변환</li>
  <li>동영상 임베딩 등은 플러그인을 사용하지말고 원 코드를 사용하는 것이 좋다.</li>
  <li>블로그의 제목, 태그는 모두 영문 사용을 기본으로 하는 것이 좋을듯.</li>
</ul>

<h2 id="httpjekyllrbcomdocsmigrations">기존 블로그 글을 <a href="http://jekyllrb.com/docs/migrations/">지킬로 마이그레이션</a></h2>

<pre><code>$ gem install jekyll-import --pre
</code></pre>

<p>공개/비공개 포스트를 구별하지 않으니 확인해야 한다.</p>

<pre><code>$ gem install hpricot
</code></pre>

<p><code>https://YOUR-USER-NAME.wordpress.com/wp-admin/export.php</code>에서 내려받은 <code>wordpress.xml</code>을 변환</p>

<pre><code>$ ruby -rubygems -e 'require "jekyll/jekyll-import/wordpressdotcom";
JekyllImport::WordpressDotCom.process({ :source =&gt; "wordpress.xml" })'
</code></pre>

<p><code>_posts</code>, <code>_pages</code>, <code>_nav_menu_items</code>의 세 개의 디렉토리에 <code>.html</code> 화일들이 추출된다.</p>

<h2 id="section-2">설치</h2>

<p>git과 Ruby를 <a href="http://octopress.org/docs/setup/">설치</a>하고 테마를 적용하였다.(글이 너무 길어지니 이 부분은 링크에서 보세요)</p>

<p>이제 <a href="http://octopress.org/docs/deploying/github/">깃허브에 올려보자</a>.</p>

<p>원하던 블로그 도메인인 <code>nolboo.github.com</code>으로 <a href="https://github.com/repositories/new">새 저장소</a>를 만든다.</p>

<pre><code>$ rake setup_github_pages //저장소 URL을 물어보면 내 경우엔 `https://github.com/nolboo/nolboo.github.com.git`을 입력

$ rake generate
$ rake deploy
</code></pre>

<p>위의 과정까지 마치면 <code>nolboo.github.com</code>이나 <code>nolboo.github.io</code>로 가보면 기본테마가 적용된 최초의 블로그를 볼 수 있다. 의외로 간단하다. </p>

<h2 id="httpoctopressorgdocsconfiguring"><a href="http://octopress.org/docs/configuring/">설정하기</a></h2>

<p><code>Rakefile</code>과 <code>_config.yml</code>만 변경하는 것으로 충분하나 설정 화일 리스트는 다음과 같다.</p>

<pre><code>_config.yml       # Main config (Jekyll's settings)
Rakefile          # Configs for deployment
config.rb         # Compass config
config.ru         # Rack config
</code></pre>

<p><code>Rakefile</code>도 <code>rsync</code>를 사용하지 않는 한 변경할 것이 없다.</p>

<h3 id="section-3">블로그 설정</h3>

<p><code>_config.yml</code>은 세 섹션으로 되어있다. <em><code>url</code>, <code>title</code>, <code>subtitle</code>, <code>author</code>는 반드시 변경해야 하고, 서드파티 서비스를 활성화시켜주어야 한다.</em></p>

<h4 id="section-4">주요 설정</h4>

<pre><code>url:                # For rewriting urls for RSS, etc
title:              # Used in the header and title tags
subtitle:           # A description used in the header
author:             # Your name, for RSS, Copyright, Metadata
simple_search:      # Search engine for simple site search
description:        # A default meta description for your site
</code></pre>

<p>위의 것만 확인하면서 변경하였다.</p>

<p>플러그인에서는 일단 <code>disqus_short_name</code>에 숏네임을 하나 정해서 넣어주었고, <code>google_analytics_tracking_id</code>에 추적 ID를 생성해서 입력했다.</p>

<h2 id="section-5">블로깅 하기</h2>

<p>블로그 포스트는 <code>source/_posts</code> 디렉토리에 지킬 방식인 <code>YYYY-MM-DD-post-title.markdown</code> 형식의 이름으로 저장되어야 한다. 이를 편하게 해주는 rake 명령은 다음과 같다.</p>

<pre><code>$ rake new_post["title"]
</code></pre>

<p><em>Title은 영문으로 주는 것이 좋다.</em>
해당 <code>.markdown</code> 화일을 에디터로 열어보면 다음과 같은 YAML 헤더를 볼 수 있다.</p>

<pre><code>---
layout: post
title: "Zombie Ninjas Attack: A survivor's retrospective"
date: 2011-07-03 5:59
comments: true
external-url:
categories:
---
</code></pre>

<p>비공개로 할 경우에는 <code>published: false</code>를 추가한다. linklog 스타일로 포스팅할 때는 <code>external-url</code>에 링크를 추가하면 된다.</p>

<p>카테고리는 다음과 같은 방식으로 지정한다.</p>

<pre><code># 한 개 추가
categories: Sass

# 여러 개 추가하기 1
categories: [CSS3, Sass, Media Queries]

# 여러 개 추가하기 2
categories:
- CSS3
- Sass
- Media Queries
</code></pre>

<p>블로그의 인덱스 페이지에서 글의 일부만 보여주려면 <code>&lt;!-- more --&gt;</code> 주석을 넣어주면 “Continue →” 버튼으로 전체 글로 링크된다.</p>

<h2 id="section-6">제너레이트와 미리보기</h2>

<pre><code>rake generate   # public 디렉토리에 포스트와 페이지를 제너레이트한다.
rake preview    # http://localhost:4000 에 웹서버를 마운트하고 볼 수 있게 한다.
</code></pre>

<p>이제 웹 브라우저에서 <code>http://localhost:4000</code> 주소를 입력하여 미리볼 수 있다.</p>

<h2 id="section-7">출판하기</h2>

<pre><code>$ rake deploy
</code></pre>

<h2 id="section-8">블로깅 워크플로우</h2>

<pre><code>1. $ rake new_post["title"] //title은 영문으로 간단하게
2. 에디터로 .markdown 화일 편집하고 
3. title: 에 멋진 한글 제목을 달고 categories: [CSS3, Sass, Media Queries] 지정
4. $ rake generate &amp;&amp; rake preview //localhost:4000에서 미리보기와 수정
5. 소스 백업(*아래 참조*)
6. $ rake deploy
</code></pre>

<p>깃허브에 반영되는 것은 시간이 좀 걸리니 바로 안 나타난다고 조급해하지 말자.</p>

<p><strong>5번 출판하기 전에 <code>source</code> 브랜치에 소스를 직접 푸시하는 것을 잊지마라.</strong></p>

<pre><code>git add .
git commit -m 'your message'
git push origin source
</code></pre>

<h2 id="section-9">맺는말</h2>

<p>마크다운을 이용할 수 있을 정도의 사용자라면 쉽게 써보려고 했지만 많이 부족한 것 같다. 옥토프레스가 내가 원하는 블로깅 워크플로우에 가장 근접하게 사용할 수 있을 것 같다. 이제 워드프레스닷컴에서 홀대받았던 나머지 글들을 계속 올리고 추가적인 포스팅도 꾸준히 할 것이다.</p>

<h2 id="section-10">추가 참조 링크</h2>

<ul>
  <li><a href="https://github.com/imathis/octopress/wiki/3rd-party-plugins">3rd party plugins</a></li>
  <li><a href="http://www.tomordonez.com/blog/2012/06/04/creating-a-github-blog-using-octopress/">Creating a Github Blog Using Octopress</a></li>
  <li><a href="http://webdesign.tutsplus.com/tutorials/applications/getting-started-with-octopress/">Getting Started with Octopress</a></li>
  <li><a href="http://paulsturgess.co.uk/blog/2013/04/24/hello-octopress-and-github-pages/">Hello Octopress &amp; Github Pages</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
